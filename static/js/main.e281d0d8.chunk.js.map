{"version":3,"sources":["style/mixin.ts","Header.tsx","modules/hello/message.ts","modules/hello/hello.ts","Inner.tsx","About.tsx","Main.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["pageSize","css","variable","cssVariables","title","Data","data","header","text","homeUrl","process","HeaderTag","styled","bgColor_g","Header","dangerouslySetInnerHTML","__html","to","message","hello","selector","innerJson","inner","Inner","useEffect","dom","document","querySelector","console","log","innerHTML","className","map","index","About","href","mainTitle","main","mainText","aboutTitle","about","aboutText","domain","info","ogpImg","tw","SectionTag","section","baseColor","Main","exact","path","Helmet","name","content","property","footer","FooterTag","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","textSize","textColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e281d0d8.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst pageSize = css`\n    width: 100%;\n    max-width: 1000px;\n    padding: 20px;\n    margin: 0 auto;\n`;\n\nexport {pageSize};","import React from 'react';\nimport Data from './data/data.json';\nimport styled from 'styled-components';\nimport { pageSize } from './style/mixin';\nimport cssVariables from './style/variables.json';\nimport { Link } from 'react-router-dom'; // Routing\n\n\nconst variable = cssVariables.variable;\nconst title = Data.data.header.title;\nconst text = Data.data.header.text;\nconst homeUrl = process.env.PUBLIC_URL; // Routing\n\n\n// Style\nconst HeaderTag = styled.header`\n  ${pageSize}\n  text-align: center;\n  background: ${variable.bgColor_g};\n  padding: 20px;\n  h2 {\n    font-size: 2em;\n  }\n  nav span {\n    padding-right: 0.5em;\n  }\n`;\n\n\n// Component\nfunction Header() {\n  return (\n    <HeaderTag>\n        <h2>{ title }</h2>\n        <p dangerouslySetInnerHTML={{ __html: text }}></p>\n          <nav>\n            <span>MENU:</span>\n            <span><Link to={ homeUrl + \"/\" }>Home</Link></span>\n            <span><Link to={ homeUrl + \"/about\" }>About</Link></span>\n          </nav>\n    </HeaderTag>\n  );\n}\n\nexport default Header;\n","import hello from '../../data/hello.json';\n\nconst message: {[key: string]: string;} = {\n    text: hello.message.text,\n    selector: hello.message.selector\n};\n\nexport { message };","import { message } from './message';\n\nconst text: string = message.text;\nconst selector: string = message.selector;\n\n\nconst hello = (): void => {\n    // document.addEventListener('DOMContentLoaded', () => {\n        const dom: HTMLButtonElement = document.querySelector(selector) as HTMLButtonElement;\n        console.log(dom);\n        dom.innerHTML = text;\n        console.log('text-> ' + text);\n    // });\n}\n\nexport { hello };","import React, { useEffect }  from 'react';\nimport { hello } from './modules/hello/hello';\nimport Data from './data/data.json';\n\n\nconst innerJson = Data.data.inner;\n\n\n// Component\nfunction Inner() {\n  useEffect(() => {\n    hello();\n  });\n\n  return (\n    <div className=\"inner\">\n      {innerJson.map((innerJson, index) =>\n        <section key={ index }>\n          <h2>{ innerJson.title }</h2>\n          <p dangerouslySetInnerHTML={{ __html: innerJson.text }}></p>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default Inner;\n","import React  from 'react';\n\n// Component\nfunction About() {\n    return (\n        <div className=\"inner\">\n            <section>\n                <h2>タイトル</h2>\n                <p>説明説明説明説明説明説明説明説明</p>\n            </section>\n            <section>\n                <h2>イイダリョウ</h2>\n                <p>フロントエンドエンジニア。神奈川に住まう四十路のオジキ。 DTP→Webデザイナーから転向し今に至る。引き続きコツコツの日々。ブログも書いてます。 Webづくり やりたい時が 始め時！</p>\n                <ul>\n                    <li><a href=\"https://www.i-ryo.com\">ブログ</a></li>\n                    <li><a href=\"https://twitter.com/idr_zz\">Twitter</a></li>\n                    <li><a href=\"https://qiita.com/i-ryo\">Qiita</a></li>\n                    <li><a href=\"https://github.com/ryo-i\">GitHub</a></li>\n                </ul>\n            </section>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport Inner from './Inner';\nimport About from './About';\nimport Data from './data/data.json';\nimport styled from 'styled-components';\nimport { pageSize } from './style/mixin';\nimport cssVariables from './style/variables.json';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'; // Routing\n\n\nconst variable = cssVariables.variable;\nconst data = Data.data;\nconst mainTitle = data.main.title;\nconst mainText = data.main.text;\nconst aboutTitle = data.about.title;\nconst aboutText = data.about.text;\nconst domain = data.info.domain;\nconst ogpImg = data.info.ogpImg;\nconst tw = data.info.tw;\nconst homeUrl = process.env.PUBLIC_URL; // Routing\n\n\n// Style\nconst SectionTag = styled.section`\n  ${pageSize}\n  h1 {\n    font-size: 1.5em;\n  }\n  h2 {\n    font-size: 1.25em;\n    color: ${variable.baseColor};\n  }\n`;\n\n\n// Component\nfunction Main() {\n  return (\n    <main>\n      <SectionTag>\n        <Switch>\n          <Route exact path={ homeUrl + \"/\" }>\n            <Helmet>\n              <title>{ mainTitle }</title>\n              <meta name=\"description\" content={ mainText } />\n              <meta property=\"og:title\" content={ mainTitle } />\n              <meta property=\"og:type\" content=\"article\" />\n              <meta property=\"og:image\" content={ domain + homeUrl + ogpImg } />\n              <meta property=\"og:url\" content={ domain + homeUrl + '/' } />\n              <meta property=\"og:description\" content={ mainText } />\n              <meta name='twitter:card' content='summary' />\n              <meta name='twitter:site' content={ tw } />\n            </Helmet>\n            <h1>{ mainTitle }</h1>\n            <p dangerouslySetInnerHTML={{ __html: mainText }}></p>\n            <Inner />\n          </Route>\n          <Route path={ homeUrl + \"/about\" }>\n            <Helmet>\n              <title>{ aboutTitle }</title>\n              <meta name=\"description\" content={ aboutText } />\n              <meta property=\"og:title\" content={ aboutTitle } />\n              <meta property=\"og:type\" content=\"article\" />\n              <meta property=\"og:image\" content={ domain + homeUrl + '/ogp.png' }  />\n              <meta property=\"og:url\" content={ domain + homeUrl + '/about'} />\n              <meta property=\"og:description\" content={ aboutText } />\n              <meta name='twitter:card' content='summary' />\n              <meta name='twitter:site' content={ tw } />\n            </Helmet>\n            <h1>{ aboutTitle }</h1>\n            <p dangerouslySetInnerHTML={{ __html: aboutText }}></p>\n            <About />\n          </Route>\n        </Switch>\n      </SectionTag>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Data from './data/data.json';\nimport styled from 'styled-components';\nimport { pageSize } from './style/mixin';\n\n\nconst text = Data.data.footer.text;\n\n\n// Style\nconst FooterTag = styled.footer`\n  ${pageSize}\n  text-align: center;\n`;\n\n\n// Component\nfunction Footer() {\n  return (\n    <FooterTag>\n        <p dangerouslySetInnerHTML={{ __html: text }}></p>\n    </FooterTag>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport { BrowserRouter as Router } from 'react-router-dom'; // Routing\n\n\n// Component\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Main />\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components';\nimport cssVariables from './style/variables.json';\n\n\nconst variable = cssVariables.variable;\n\n\n// Style\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: ${variable.textSize};\n    color: ${variable.textColor};\n    *, *:before, *:after {\n        box-sizing: border-box;\n    }\n    a {\n        color: ${variable.baseColor};\n        &:hover {\n          opacity: 0.8;\n        }\n    }\n    section {\n      margin: 0 0 20px;\n    }\n    h1, h2, p, figure, ul, table {\n      margin: 0 0 10px;\n    }\n    h1, h2 {\n      line-height: 1.25;\n    }\n    p {\n      line-height: 1.75;\n    }\n  }\n`;\n\n\n// Render\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}